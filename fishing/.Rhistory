'#e31a1c')) +
theme_bw()
}
ggplotly(make_plot_by('Catch_individuals'), tooltip = c('text', 'label', 'fill', 'size', 'x'))
# Chunk 6: plot weight
ggplotly(make_plot_by('biomass'), tooltip = c('text', 'label', 'fill', 'size', 'x'))
# Chunk 7
table_fs %>%
dplyr::mutate(Scientific_Name = paste0(
"<a href='http://www.fishbase.org/summary/",
SpecCode,
"' target='_blank'>", Scientific_Name, "</a>")) %>%
mu_c(IUCN_Code != "N.E.", IUCN_Code = paste0(
"<a href='http://www.iucnredlist.org/details/",
IUCN_ID,
"/0' target='_blank'>", IUCN_Code, "</a>")) %>%
dplyr::select(Risk, Common_Name, Scientific_Name, Resilience, Vulnerability, IUCN_Code, Catch_individuals, biomass) %>%
dplyr::rename(Vuln = Vulnerability,
Catch = Catch_individuals,
IUCN = IUCN_Code,
Kg = biomass) %>%
dplyr::arrange(dplyr::desc(Risk), dplyr::desc(Vuln)) %>%
datatable(escape = F) %>%
formatStyle('Risk', fontWeight = styleEqual('4 - Very high' ,'bold')) %>%
formatStyle('Scientific_Name', fontStyle = 'italic')
table_fs %>% dplyr::group_by(Risk) %>% dplyr::summarise(n())
table_fs
totals <- table_fs %>%
dplyr::group_by(Risk) %>%
dplyr::summarise(n_sp = n(),
n_ind = sum(Catch_individuals),
bio = sum(biomass))
totals
totals <- table_fs %>%
dplyr::group_by(Risk) %>%
dplyr::summarise(n_sp = n(),
n_ind = sum(Catch_individuals),
bio = sum(biomass)) %>%
dplyr::group_by() %>%
dplyr::mutate(p_ind = round(n_ind / sum(n_ind) * 100),
p_bio = round(bio / sum(bio) * 100))
otals
totals
totals$n_sp['Risk' == '4 - Very high']
totals$n_sp["Risk" == '4 - Very high']
totals$n_sp["Risk" == "4 - Very high"]
totals$n_sp[Risk == "4 - Very high"]
totals$n_sp[totals$Risk == "4 - Very high"]
names(table_fs)
table_fs %$%
paste0(Common_Name, " (*", Scientific_Name, "*)")
names <- table_fs %>%
dplyr::mutate(full_name = paste0(Common_Name, " (*", Scientific_Name, "*)"))
names
dplyr::filter(names, Risk == "4 - Very high")
dplyr::filter(names, Risk == "4 - Very high") %$% full_name
dplyr::filter(names, Risk == "4 - Very high") %$% full_name %>% as.list() %>% do.call(paste)
dplyr::filter(names, Risk == "4 - Very high") %$% full_name %>% as.list() %>% do.call(paste, .)
dplyr::filter(names, Risk == "4 - Very high") %$% full_name %>% as.list() %>% do.call(paste, ., sep = ", ")
print_names <- function(x){
names <- dplyr::filter(names, Risk == x) %$% full_name %>% as.list()
names$sep <- ", "
do.call(paste, names)
}
print_names("4 - Very high")
names
print_names <- function(names, x){x
n <- dplyr::filter(names, Risk == x) %$% full_name %>% as.list()
n$sep <- ", "
do.call(paste, n)
}
x <- '4 - Very high'
n <- dplyr::filter(names, Risk == x) %$% full_name %>% as.list()
n
dplyr::last(n)
n[-4]
n[-length(n)]
n <- dplyr::filter(names, Risk == x) %$% full_name %>% as.list()
last <- dplyr::last(n)
n <- n[-length(n)]
n$sep <- ", "
do.call(paste, n)
n <- dplyr::filter(names, Risk == x) %$% full_name %>% as.list()
last <- dplyr::last(n)
n <- n[-length(n)]
n$sep <- ", "
do.call(paste, n) %>% paste(last, sep = ", and ")
n <- dplyr::filter(names, Risk == x) %$% full_name %>% as.list()
last <- dplyr::last(n)
n <- n[-length(n)]
n$sep <- ", "
do.call(paste, n) %>% paste(last, sep = ", and the")
print_names <- function(names, x, mid_sep = ", ", last_sep = ", and the"){x
n <- dplyr::filter(names, Risk == x) %$% full_name %>% as.list()
last <- dplyr::last(n)
n <- n[-length(n)]
n$sep <- mid_sep
do.call(paste, n) %>% paste(last, sep = last_sep)
}
?lowercase
?tolower
totals
?DT::datatable
`r totals$n_sp[totals$Risk == "2 - Moderate"]`
library(magrittr)
library(plotly)
library(ggplot2)
library(DT)
source('./code/numbers2words.R')
fs <- readRDS("../data/processed/fish-sustainability.rds")
# Manually fix C. undulatus and Istiompax indica
fs[fs$sciname == "Istiompax indica", c('catch', 'biomass')] <- c(1, 90)
fs[fs$sciname == "Cheilinus undulatus", c('catch', 'biomass')] <- c(6, 157)
res_eq <- data.frame(Resilience = c('Very low', 'Low', 'Medium', 'High'),
n_res = c(1, 2, 3, 4))
plot_fs <- fs %>%
dplyr::mutate(catch = replace(catch, is.na(catch), 1),
biomass = replace(biomass, is.na(biomass) | 0, 3)) %>%
dplyr::inner_join(res_eq) %>%
dplyr::arrange(desc(catch)) %>%
dplyr::mutate(a = catch >= 100 | IUCN_Code %in% c('NT', 'VU', 'EN'))
names(plot_fs)[1:3] <- c('Scientific_Name',
'Common_Name',
'Vulnerability')
names(plot_fs)[9:11] <- c('IUCN_Status',
'vuln_categ',
'Catch_individuals')
plot_fs
plot_fs$n_res
plot_fs$n_res %>% dplyr::percent_rank()
?dplyr::percent_rank
plot_fs$n_res %>% dplyr::percent_rank()
plot_fs$Vulnerability %>% dplyr::percent_rank()
plot_fs$Vulnerability
# conditional mutate
mu_c <- function(.data, condition, ..., envir = parent.frame()) {
condition <- eval(substitute(condition), .data, envir)
.data[condition, ] <- .data[condition, ] %>% dplyr::mutate(...)
.data
}
table_fs <- plot_fs %>%
dplyr::mutate(q_risk = Vulnerability + dplyr::percent_rank(-n_res))/2) %>%
dplyr::mutate(Risk = "0 - Low") %>%
mu_c((Resilience %in% c('Very low', 'Low')) |
(Vulnerability > 60),
Risk = "1 - Follow up") %>%
mu_c(((Resilience %in% c('Very low', 'Low')) & (Vulnerability > 60)) |
(Resilience == 'Very low' | Vulnerability > 80) | (IUCN_Code == 'NT'),
Risk = "2 - Moderate") %>%
mu_c(((Resilience == 'Very low' & Vulnerability > 60) |
(Vulnerability > 80 & Resilience %in% c('Low', 'Very Low'))),
Risk = "3 - High")  %>%
mu_c(((Resilience %in% c('Very low')) &
(Vulnerability > 80)) | (IUCN_Code %in% c('VU', 'EN')),
Risk = "4 - Very high")
# conditional mutate
mu_c <- function(.data, condition, ..., envir = parent.frame()) {
condition <- eval(substitute(condition), .data, envir)
.data[condition, ] <- .data[condition, ] %>% dplyr::mutate(...)
.data
}
table_fs <- plot_fs %>%
dplyr::mutate(q_risk = Vulnerability + dplyr::percent_rank(-n_res))/2) %>%
dplyr::mutate(Risk = "0 - Low") %>%
mu_c((Resilience %in% c('Very low', 'Low')) |
(Vulnerability > 60),
Risk = "1 - Follow up") %>%
mu_c(((Resilience %in% c('Very low', 'Low')) & (Vulnerability > 60)) |
(Resilience == 'Very low' | Vulnerability > 80) | (IUCN_Code == 'NT'),
Risk = "2 - Moderate") %>%
mu_c(((Resilience == 'Very low' & Vulnerability > 60) |
(Vulnerability > 80 & Resilience %in% c('Low', 'Very Low'))),
Risk = "3 - High")  %>%
mu_c(((Resilience %in% c('Very low')) &
(Vulnerability > 80)) | (IUCN_Code %in% c('VU', 'EN')),
Risk = "4 - Very high")
names2
print_names()
table_fs %>%
dplyr::mutate(full_name = paste0(tolower(Common_Name), " (", Scientific_Name, ")"))
?datatable
?kable
return(1, 2)
?return
?glmm
??glmm
?glm
?drop1
lm1 <- lm(Fertility ~ ., data = swiss)
add1(lm1, ~ I(Education^2) + .^2)
drop1(lm1, test = "F")
drop1(glm.D93, test = "Chisq")
drop1(glm.D93, test = "F")
# Chunk 1: libraries
library(magrittr)
library(plotly)
library(ggplot2)
library(DT)
source('../code/numbers2words.R')
# Chunk 2: read data
fs <- readRDS("../data/processed/fish-sustainability.rds")
# Manually fix C. undulatus and Istiompax indica
fs[fs$sciname == "Istiompax indica", c('catch', 'biomass')] <- c(1, 90)
fs[fs$sciname == "Cheilinus undulatus", c('catch', 'biomass')] <- c(6, 157)
res_eq <- data.frame(Resilience = c('Very low', 'Low', 'Medium', 'High'),
n_res = c(1, 2, 3, 4))
# Chunk 3: clean stuff
plot_fs <- fs %>%
dplyr::mutate(catch = replace(catch, is.na(catch), 1),
biomass = replace(biomass, is.na(biomass) | 0, 3)) %>%
dplyr::inner_join(res_eq) %>%
dplyr::arrange(desc(catch)) %>%
dplyr::mutate(a = catch >= 100 | IUCN_Code %in% c('NT', 'VU', 'EN'))
names(plot_fs)[1:3] <- c('Scientific_Name',
'Common_Name',
'Vulnerability')
names(plot_fs)[9:11] <- c('IUCN_Status',
'vuln_categ',
'Catch_individuals')
# Chunk 4: calculations
# conditional mutate
mu_c <- function(.data, condition, ..., envir = parent.frame()) {
condition <- eval(substitute(condition), .data, envir)
.data[condition, ] <- .data[condition, ] %>% dplyr::mutate(...)
.data
}
table_fs <- plot_fs %>%
dplyr::mutate(q_risk = (dplyr::percent_rank(Vulnerability) + dplyr::percent_rank(-n_res))/2) %>%
dplyr::mutate(Risk = "0 - Low") %>%
mu_c((Resilience %in% c('Very low', 'Low')) |
(Vulnerability > 60),
Risk = "1 - Follow up") %>%
mu_c(((Resilience %in% c('Very low', 'Low')) & (Vulnerability > 60)) |
(Resilience == 'Very low' | Vulnerability > 80),
Risk = "2 - Moderate") %>%
mu_c(((Resilience == 'Very low' & Vulnerability > 60) |
(Vulnerability > 80 & Resilience %in% c('Low', 'Very Low'))),
Risk = "3 - High")  %>%
mu_c(((Resilience %in% c('Very low')) &
(Vulnerability > 80)),
Risk = "4 - Very high")
# Chunk 5: names
totals <- table_fs %>%
dplyr::group_by(Risk) %>%
dplyr::summarise(n_sp = n(),
n_ind = sum(Catch_individuals),
bio = sum(biomass)) %>%
dplyr::group_by() %>%
dplyr::mutate(p_ind = round(n_ind / sum(n_ind) * 100),
p_bio = round(bio / sum(bio) * 100))
names <- table_fs %>%
dplyr::mutate(full_name = paste0(tolower(Common_Name), " (*", Scientific_Name, "*)"))
names2 <- table_fs %>%
dplyr::mutate(full_name = paste0(tolower(Common_Name), " (", Scientific_Name, ")"))
print_names <- function(names, x, mid_sep = ", the ", last_sep = ", and the "){x
n <- dplyr::filter(names, Risk %in% x) %$% full_name %>% as.list()
last <- dplyr::last(n)
n <- n[-length(n)]
n$sep <- mid_sep
do.call(paste, n) %>% paste(last, sep = last_sep)
}
# Chunk 6: plot number
make_plot_by <- function(x){
plot_fs %>%
dplyr::arrange(-Catch_individuals) %>%
ggplot(aes_string(x = 'Vulnerability', y = 'n_res')) +
geom_rect(xmin = 60, xmax = 100, ymin = 0.25, ymax = 4.75, alpha = 0.1, fill = "#e31a1c") +
geom_rect(xmin = 0, xmax = 100, ymin = 0.25, ymax = 2.5, alpha = 0.1, fill = "#e31a1c") +
geom_rect(xmin = 80, xmax = 100, ymin = 0.25, ymax = 4.75, alpha = 0.1, fill = "#e31a1c") +
geom_rect(xmin = 0, xmax = 100, ymin = 0.25, ymax = 1.5, alpha = 0.1, fill = "#e31a1c") +
# geom_rect(xmin = 70, xmax = 100, ymin = 0.25, ymax = 1.5, alpha = 0.15, fill = "#e31a1c") +
geom_point(aes_string(size = x,
fill = 'IUCN_Status',
label = 'Scientific_Name',
text = 'Common_Name'),
alpha = 0.75, shape = 21, stroke = 0.3) +
# geom_text(label = "Risk zone", x = 75, y = 1.375, colour = "#e31a1c") +
# geom_text(aes(label = FBname, alpha = a),
#            position = position_jitter(height = 0.9, width = 0),
#            size = 3) +
scale_y_continuous(breaks = 1:4,
labels = c('Very low', 'Low', 'Medium', 'High'),
limits = c(0.5, 4.5), name = "Species resilience") +
scale_x_continuous(breaks = seq(20, 80, 20),
labels = c('Low', 'Moderate', 'High', 'Very high'),
name = "Species vulnerability") +
scale_size(range = c(1,35), guide = "none") +
scale_fill_manual(labels = c('Not evaluateddd',
'Data deficient',
'Least concern',
'Near Threatened',
'Vulnerable',
'Endangered'),
values = c('grey95',
'grey95',
'#33a02c',
'#ff7f00',
'#e31a1c',
'#e31a1c')) +
theme_bw()
}
make_plot_by('Catch_individuals') %>%
ggplotly(tooltip = c('text', 'label', 'fill', 'size', 'x'))
# Chunk 7: plot weight
make_plot_by('biomass') %>%
ggplotly(, tooltip = c('text', 'label', 'fill', 'size', 'x'))
# Chunk 8: table
table_fs %>%
dplyr::mutate(q_risk = round(q_risk, 2)) %>%
dplyr::mutate(Scientific_Name = paste0(
"<a href='http://www.fishbase.org/summary/",
SpecCode,
"' target='_blank'>", Scientific_Name, "</a>")) %>%
mu_c(IUCN_Code != "N.E.", IUCN_Code = paste0(
"<a href='http://www.iucnredlist.org/details/",
IUCN_ID,
"/0' target='_blank'>", IUCN_Code, "</a>")) %>%
dplyr::select(q_risk, Risk, Common_Name, Scientific_Name, Resilience, Vulnerability, IUCN_Code, Catch_individuals, biomass) %>%
dplyr::rename(Qr = q_risk,
Resl = Resilience,
Vuln = Vulnerability,
N = Catch_individuals,
IUCN = IUCN_Code,
Kg = biomass) %>%
dplyr::arrange(dplyr::desc(Qr), dplyr::desc(Vuln)) %>%
datatable(escape = F, options = list(
columnDefs = list(list(className = 'dt-center', targets = 6)),
pageLength = 15,
lengthMenu = c(15, 30, 70)),
rownames = F,
caption = "Aldabra species' risk classification. For more information click on the species scientific name or the IUCN assesment code.") %>%
formatStyle('Risk', fontWeight = styleEqual('4 - Very high' ,'bold')) %>%
formatStyle('Scientific_Name', fontStyle = 'italic')
source('../code/numbers2words.R')
source('./code/numbers2words.R')
source('./code/numbers2words.R')
# Chunk 1: libraries
library(magrittr)
library(plotly)
library(ggplot2)
library(DT)
source('./code/numbers2words.R')
# Chunk 2: read data
fs <- readRDS("./data/processed/fish-sustainability.rds")
# Manually fix C. undulatus and Istiompax indica
fs[fs$sciname == "Istiompax indica", c('catch', 'biomass')] <- c(1, 90)
fs[fs$sciname == "Cheilinus undulatus", c('catch', 'biomass')] <- c(6, 157)
res_eq <- data.frame(Resilience = c('Very low', 'Low', 'Medium', 'High'),
n_res = c(1, 2, 3, 4))
# Chunk 3: clean stuff
plot_fs <- fs %>%
dplyr::mutate(catch = replace(catch, is.na(catch), 1),
biomass = replace(biomass, is.na(biomass) | 0, 3)) %>%
dplyr::inner_join(res_eq) %>%
dplyr::arrange(desc(catch)) %>%
dplyr::mutate(a = catch >= 100 | IUCN_Code %in% c('NT', 'VU', 'EN'))
names(plot_fs)[1:3] <- c('Scientific_Name',
'Common_Name',
'Vulnerability')
names(plot_fs)[9:11] <- c('IUCN_Status',
'vuln_categ',
'Catch_individuals')
# Chunk 4: calculations
# conditional mutate
mu_c <- function(.data, condition, ..., envir = parent.frame()) {
condition <- eval(substitute(condition), .data, envir)
.data[condition, ] <- .data[condition, ] %>% dplyr::mutate(...)
.data
}
table_fs <- plot_fs %>%
dplyr::mutate(q_risk = (dplyr::percent_rank(Vulnerability) + dplyr::percent_rank(-n_res))/2) %>%
dplyr::mutate(Risk = "0 - Low") %>%
mu_c((Resilience %in% c('Very low', 'Low')) |
(Vulnerability > 60),
Risk = "1 - Follow up") %>%
mu_c(((Resilience %in% c('Very low', 'Low')) & (Vulnerability > 60)) |
(Resilience == 'Very low' | Vulnerability > 80),
Risk = "2 - Moderate") %>%
mu_c(((Resilience == 'Very low' & Vulnerability > 60) |
(Vulnerability > 80 & Resilience %in% c('Low', 'Very Low'))),
Risk = "3 - High")  %>%
mu_c(((Resilience %in% c('Very low')) &
(Vulnerability > 80)),
Risk = "4 - Very high")
# Chunk 5: names
totals <- table_fs %>%
dplyr::group_by(Risk) %>%
dplyr::summarise(n_sp = n(),
n_ind = sum(Catch_individuals),
bio = sum(biomass)) %>%
dplyr::group_by() %>%
dplyr::mutate(p_ind = round(n_ind / sum(n_ind) * 100),
p_bio = round(bio / sum(bio) * 100))
names <- table_fs %>%
dplyr::mutate(full_name = paste0(tolower(Common_Name), " (*", Scientific_Name, "*)"))
names2 <- table_fs %>%
dplyr::mutate(full_name = paste0(tolower(Common_Name), " (", Scientific_Name, ")"))
print_names <- function(names, x, mid_sep = ", the ", last_sep = ", and the "){x
n <- dplyr::filter(names, Risk %in% x) %$% full_name %>% as.list()
last <- dplyr::last(n)
n <- n[-length(n)]
n$sep <- mid_sep
do.call(paste, n) %>% paste(last, sep = last_sep)
}
# Chunk 6: plot number
make_plot_by <- function(x){
plot_fs %>%
dplyr::arrange(-Catch_individuals) %>%
ggplot(aes_string(x = 'Vulnerability', y = 'n_res')) +
geom_rect(xmin = 60, xmax = 100, ymin = 0.25, ymax = 4.75, alpha = 0.1, fill = "#e31a1c") +
geom_rect(xmin = 0, xmax = 100, ymin = 0.25, ymax = 2.5, alpha = 0.1, fill = "#e31a1c") +
geom_rect(xmin = 80, xmax = 100, ymin = 0.25, ymax = 4.75, alpha = 0.1, fill = "#e31a1c") +
geom_rect(xmin = 0, xmax = 100, ymin = 0.25, ymax = 1.5, alpha = 0.1, fill = "#e31a1c") +
# geom_rect(xmin = 70, xmax = 100, ymin = 0.25, ymax = 1.5, alpha = 0.15, fill = "#e31a1c") +
geom_point(aes_string(size = x,
fill = 'IUCN_Status',
label = 'Scientific_Name',
text = 'Common_Name'),
alpha = 0.75, shape = 21, stroke = 0.3) +
# geom_text(label = "Risk zone", x = 75, y = 1.375, colour = "#e31a1c") +
# geom_text(aes(label = FBname, alpha = a),
#            position = position_jitter(height = 0.9, width = 0),
#            size = 3) +
scale_y_continuous(breaks = 1:4,
labels = c('Very low', 'Low', 'Medium', 'High'),
limits = c(0.5, 4.5), name = "Species resilience") +
scale_x_continuous(breaks = seq(20, 80, 20),
labels = c('Low', 'Moderate', 'High', 'Very high'),
name = "Species vulnerability") +
scale_size(range = c(1,35), guide = "none") +
scale_fill_manual(labels = c('Not evaluateddd',
'Data deficient',
'Least concern',
'Near Threatened',
'Vulnerable',
'Endangered'),
values = c('grey95',
'grey95',
'#33a02c',
'#ff7f00',
'#e31a1c',
'#e31a1c')) +
theme_bw()
}
make_plot_by('Catch_individuals') %>%
ggplotly(tooltip = c('text', 'label', 'fill', 'size', 'x'))
# Chunk 7: plot weight
make_plot_by('biomass') %>%
ggplotly(, tooltip = c('text', 'label', 'fill', 'size', 'x'))
# Chunk 8: table
table_fs %>%
dplyr::mutate(q_risk = round(q_risk, 2)) %>%
dplyr::mutate(Scientific_Name = paste0(
"<a href='http://www.fishbase.org/summary/",
SpecCode,
"' target='_blank'>", Scientific_Name, "</a>")) %>%
mu_c(IUCN_Code != "N.E.", IUCN_Code = paste0(
"<a href='http://www.iucnredlist.org/details/",
IUCN_ID,
"/0' target='_blank'>", IUCN_Code, "</a>")) %>%
dplyr::select(q_risk, Risk, Common_Name, Scientific_Name, Resilience, Vulnerability, IUCN_Code, Catch_individuals, biomass) %>%
dplyr::rename(Qr = q_risk,
Resl = Resilience,
Vuln = Vulnerability,
N = Catch_individuals,
IUCN = IUCN_Code,
Kg = biomass) %>%
dplyr::arrange(dplyr::desc(Qr), dplyr::desc(Vuln)) %>%
datatable(escape = F, options = list(
columnDefs = list(list(className = 'dt-center', targets = 6)),
pageLength = 15,
lengthMenu = c(15, 30, 70)),
rownames = F,
caption = "Aldabra species' risk classification. For more information click on the species scientific name or the IUCN assesment code.") %>%
formatStyle('Risk', fontWeight = styleEqual('4 - Very high' ,'bold')) %>%
formatStyle('Scientific_Name', fontStyle = 'italic')
table_fs
table_fs %>% dplyr::filter(Risk %in% c('4 - Very Hight'))
table_fs %>% dplyr::filter(Risk %in% c('4 - Very High'))
table_fs %>% dplyr::filter(Risk %in% c('4 - Very high'))
table_fs %>% dplyr::filter(Risk %in% c('4 - Very high', '3 - High'))
table_fs %>% dplyr::filter(Risk %in% c('4 - Very high', '3 - High') | IUCN_Code %in% c('VU', 'EN', 'NT'))
table_fs %>% dplyr::filter(Risk %in% c('4 - Very high', '3 - High') | IUCN_Code %in% c('VU', 'EN', 'NT')) %>% write.csv('candidate_species.csv')
table_fs %>% dplyr::filter(Risk %in% c('4 - Very high', '3 - High') | IUCN_Code %in% c('VU', 'EN', 'NT')) %>% dplyr::arrange(q_risk) %>% write.csv('candidate_species.csv')
table_fs %>% dplyr::filter(Risk %in% c('4 - Very high', '3 - High') | IUCN_Code %in% c('VU', 'EN', 'NT')) %>% dplyr::arrange(dplyr::des(q_risk)) %>% write.csv('candidate_species.csv')
table_fs %>% dplyr::filter(Risk %in% c('4 - Very high', '3 - High') | IUCN_Code %in% c('VU', 'EN', 'NT')) %>% dplyr::arrange(dplyr::desc(q_risk)) %>% write.csv('candidate_species.csv')
library(rfishbase)
fecundity('Lutjanus bohar')
fecundity("Oreochromis niloticus")
fecundity("Oreochromis niloticus") %>% View
library(magrittr)
fecundity("Oreochromis niloticus") %>% View
maturity("Oreochromis niloticus")
maturity("Oreochromis niloticus") %>% View
maturity("Caranx ignobilis") %>% View
maturity("Epinephelus polyphekadion") %>% View
names <- read.csv("data/processed/fixed_species_names.csv") %$% x %>%
as.character()
names
maturity_table <- maturity(names)
warnings()
maturity_table
maturity_table %>% View
warnings()
mt1 <- maturity_table
maturity_table <- maturity(names)
warnings()
?warnings
warnings()
maturity_table <- maturity(names)
warnings()
write.csv(maturity_table, "data/processed/maturity_table.csv", row.names = F)
