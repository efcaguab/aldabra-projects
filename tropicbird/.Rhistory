# visit previous to first egg encounter
l$pv_e <- if(!is.na(l$fe_e)) survey[which(survey == l$fe_e) - 1] else NA
# last egg encounter
l$le_e <- if("e" %in% x$state) last(x$date[x$state == "e"]) else NA
# visit following to last egg encounter
l$fv_e <- if(!is.na(l$le_e)) survey[which(survey == l$le_e) + 1] else NA
# egg fate
l$fate_e <- if("ht" %in% x$state) "success" else "failure"
if(!is.na(l$le_e)) {
l$fate_e <- if(l$le_e == last(survey)) "undetermined" else l$fate_e
}
# first hatchling encounter
l$fe_h <- if("ht" %in% x$state) first(x$date[x$state == "ht"]) else NA
# visit previous to first ht encounter
l$pv_h <- if(!is.na(l$fe_h)) survey[which(survey == l$fe_h) - 1] else NA
# last ht encounter
l$le_h <- if("ht" %in% x$state) last(x$date[x$state == "ht"]) else NA
# visit following to last ht encounter
l$fv_h <- if(!is.na(l$le_h)) survey[which(survey == l$le_h) + 1] else NA
# ht fate
l$fate_h <- if("c3" %in% x$nest_status) "success" else "failure"
if(!is.na(l$le_h)){
l$fate_h <- if(l$le_h == last(survey)) "undetermined" else l$fate_h
}
l <- lapply(l, function(x)	if(length(x) == 0) NA else x)
data.frame(l$pv_e, l$fe_e, l$le_e, l$fv_e, l$pv_h, l$fe_h, l$le_h, l$fv_h, l$fate_e, l$fate_h)
}, .progress = "text")
View(nests)
stringr::str_sub("l.xxx")
stringr::str_sub("l.xxx", 1)
stringr::str_sub("l.xxx", 2)
stringr::str_sub("l.xxx", 3)
nests <- tb %>%
fi(spp_name != "No data") %>%
plyr::ddply(c("islet", "nest", "spp_name"), function(x){
# get all the dates in which the islet was visited
survey <- effort %>%
fi(islet == x$islet[1],
spp_name == x$spp_nam[1]) %>%
ar(date) %$% date
# simplify if it was an egg or a hatcling
x %<>% ar(date) %>%
fi(!is.na(nest_status)) %>%
mu(state = plyr::mapvalues(nest_status,
c("e", "c1", "c2", "c3", "ep", "cd", "en", "not found"),
c("e", rep("ht", 3), rep(NA, 4)),
warn_missing = F)) %>%
fi(!is.na(state))
## find all nest attributes for both egg and hatchling times
l <- list()
# fist egg encounter
l$fe_e <- if ("e" %in% x$state) first(x$date[x$state == "e"]) else NA
# visit previous to first egg encounter
l$pv_e <- if(!is.na(l$fe_e)) survey[which(survey == l$fe_e) - 1] else NA
# last egg encounter
l$le_e <- if("e" %in% x$state) last(x$date[x$state == "e"]) else NA
# visit following to last egg encounter
l$fv_e <- if(!is.na(l$le_e)) survey[which(survey == l$le_e) + 1] else NA
# egg fate
l$fate_e <- if("ht" %in% x$state) "success" else "failure"
if(!is.na(l$le_e)) {
l$fate_e <- if(l$le_e == last(survey)) "undetermined" else l$fate_e
}
# first hatchling encounter
l$fe_h <- if("ht" %in% x$state) first(x$date[x$state == "ht"]) else NA
# visit previous to first ht encounter
l$pv_h <- if(!is.na(l$fe_h)) survey[which(survey == l$fe_h) - 1] else NA
# last ht encounter
l$le_h <- if("ht" %in% x$state) last(x$date[x$state == "ht"]) else NA
# visit following to last ht encounter
l$fv_h <- if(!is.na(l$le_h)) survey[which(survey == l$le_h) + 1] else NA
# ht fate
l$fate_h <- if("c3" %in% x$nest_status) "success" else "failure"
if(!is.na(l$le_h)){
l$fate_h <- if(l$le_h == last(survey)) "undetermined" else l$fate_h
}
l <- lapply(l, function(x)	if(length(x) == 0) NA else x)
l <- data.frame(l$pv_e, l$fe_e, l$le_e, l$fv_e, l$pv_h, l$fe_h, l$le_h, l$fv_h, l$fate_e, l$fate_h)
names(l) <- stringr::str_sub(names(l), 3)
}, .progress = "text")
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day"))
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>% View
nests <- tb %>%
fi(spp_name != "No data") %>%
plyr::ddply(c("islet", "nest", "spp_name"), function(x){
# get all the dates in which the islet was visited
survey <- effort %>%
fi(islet == x$islet[1],
spp_name == x$spp_nam[1]) %>%
ar(date) %$% date
# simplify if it was an egg or a hatcling
x %<>% ar(date) %>%
fi(!is.na(nest_status)) %>%
mu(state = plyr::mapvalues(nest_status,
c("e", "c1", "c2", "c3", "ep", "cd", "en", "not found"),
c("e", rep("ht", 3), rep(NA, 4)),
warn_missing = F)) %>%
fi(!is.na(state))
## find all nest attributes for both egg and hatchling times
l <- list()
# fist egg encounter
l$fe_e <- if ("e" %in% x$state) first(x$date[x$state == "e"]) else NA
# visit previous to first egg encounter
l$pv_e <- if(!is.na(l$fe_e)) survey[which(survey == l$fe_e) - 1] else NA
# last egg encounter
l$le_e <- if("e" %in% x$state) last(x$date[x$state == "e"]) else NA
# visit following to last egg encounter
l$fv_e <- if(!is.na(l$le_e)) survey[which(survey == l$le_e) + 1] else NA
# egg fate
l$fate_e <- if("ht" %in% x$state) "success" else "failure"
if(!is.na(l$le_e)) {
l$fate_e <- if(l$le_e == last(survey)) "undetermined" else l$fate_e
}
# first hatchling encounter
l$fe_h <- if("ht" %in% x$state) first(x$date[x$state == "ht"]) else NA
# visit previous to first ht encounter
l$pv_h <- if(!is.na(l$fe_h)) survey[which(survey == l$fe_h) - 1] else NA
# last ht encounter
l$le_h <- if("ht" %in% x$state) last(x$date[x$state == "ht"]) else NA
# visit following to last ht encounter
l$fv_h <- if(!is.na(l$le_h)) survey[which(survey == l$le_h) + 1] else NA
# ht fate
l$fate_h <- if("c3" %in% x$nest_status) "success" else "failure"
if(!is.na(l$le_h)){
l$fate_h <- if(l$le_h == last(survey)) "undetermined" else l$fate_h
}
l <- lapply(l, function(x)	if(length(x) == 0) NA else x)
l <- data.frame(l$pv_e, l$fe_e, l$le_e, l$fv_e, l$pv_h, l$fe_h, l$le_h, l$fv_h, l$fate_e, l$fate_h)
# make nicer namaes
names(l) <- stringr::str_sub(names(l), 3)
l
}, .progress = "text")
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>% View
nests %>%
mu(incubation_time = difftime(mean(c(le_e, pv_e)), mean(c(fe_e, fv_e)), units = "day")) %>% View
c(le_e, pv_e)
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>% View
library(ggplot2)
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>%
ggplot(aes(x = incubation_time)) +
geom_histogram()
?stat_histogram
?geom_histogram
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>%
ggplot(aes(x = incubation_time)) +
geom_histogram(binwidth = 2)
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>%
ggplot(aes(x = incubation_time)) +
geom_histogram(binwidth = 2) +
facet_grid(~fate_e)
# incubation time
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>%
ggplot(aes(x = incubation_time)) +
geom_histogram(binwidth = 2) +
facet_grid(~fate_e, scales = "free_x")
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>%
ggplot(aes(x = incubation_time, fill = spp_name)) +
geom_histogram(binwidth = 2) +
facet_grid(~fate_e, scales = "free_x")
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>%
ggplot(aes(x = incubation_time, fill = spp_name)) +
geom_histogram(binwidth = 2) +
facet_grid(spp_name ~fate_e, scales = "free_x")
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = difftime(le_e, fe_e, units = "day")) %>%
ggplot(aes(x = incubation_time, fill = spp_name)) +
geom_histogram(binwidth = 2) +
facet_grid(spp_name ~fate_e, scales = "free")
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day"))) %>%
fi(incubation_time < 100) %>%
ggplot(aes(x = incubation_time, fill = spp_name)) +
geom_histogram(binwidth = 2) +
facet_grid(spp_name ~fate_e, scales = "free")
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day")),
brooding_time = as.numeric(difftime(le_h, fe_h, units = "day"))) %>%
fi(incubation_time < 100) %>%
ggplot(aes(x = incubation_time, fill = spp_name)) +
geom_histogram(binwidth = 2) +
facet_grid(spp_name ~fate_e, scales = "free")
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day")),
brooding_time = as.numeric(difftime(le_h, fe_h, units = "day"))) %>%
fi(incubation_time < 100) %>%
ggplot(aes(x = brooding_time, fill = spp_name)) +
geom_histogram(binwidth = 2) +
facet_grid(spp_name ~fate_e, scales = "free")
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day")),
brooding_time = as.numeric(difftime(le_h, fe_h, units = "day"))) %>%
fi(incubation_time < 100) %>%
ggplot(aes(x = brooding_time, fill = spp_name)) +
geom_histogram(binwidth = 2) +
facet_grid(spp_name ~fate_h, scales = "free")
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day")),
brooding_time = as.numeric(difftime(le_h, fe_h, units = "day"))) %>%
fi(incubation_time < 100,
brooding_time < 100) %>%
ggplot(aes(x = brooding_time, fill = spp_name)) +
geom_histogram(binwidth = 2) +
facet_grid(spp_name ~fate_h, scales = "free")
# lets explore it a bit
# incubation time
nests %>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day")),
brooding_time = as.numeric(difftime(le_h, fe_h, units = "day"))) %>%
fi(incubation_time < 100,
brooding_time < 150) %>%
ggplot(aes(x = brooding_time, fill = spp_name)) +
geom_histogram(binwidth = 2) +
facet_grid(spp_name ~fate_h, scales = "free")
nests %<>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day")),
brooding_time = as.numeric(difftime(le_h, fe_h, units = "day")))
nests %>%
fi(incubation_time > 45 &
brooding_time > 80) %>% View
nests %>%
fi(incubation_time > 45 |
brooding_time > 80) %>% View
x <- fi(tb, spp_name == "Red-tail tropicbird", islet == "LG00", nest == 939)
x
?rle
rle(x$nest_status)
nests <- tb %>%
fi(spp_name != "No data") %>%
plyr::ddply(c("islet", "nest", "spp_name"), function(x){
# get all the dates in which the islet was visited
survey <- effort %>%
fi(islet == x$islet[1],
spp_name == x$spp_nam[1]) %>%
ar(date) %$% date
# simplify if it was an egg or a hatcling
x %<>% ar(date) %>%
fi(!is.na(nest_status)) %>%
mu(state = plyr::mapvalues(nest_status,
c("e", "c1", "c2", "c3", "ep", "cd", "en", "not found"),
c("e", rep("ht", 3), rep(NA, 4)),
warn_missing = F)) %>%
fi(!is.na(state))
## find all nest attributes for both egg and hatchling times
l <- list()
# fist egg encounter
l$fe_e <- if ("e" %in% x$state) first(x$date[x$state == "e"]) else NA
# visit previous to first egg encounter
l$pv_e <- if(!is.na(l$fe_e)) survey[which(survey == l$fe_e) - 1] else NA
# last egg encounter
l$le_e <- if("e" %in% x$state) last(x$date[x$state == "e"]) else NA
# visit following to last egg encounter
l$fv_e <- if(!is.na(l$le_e)) survey[which(survey == l$le_e) + 1] else NA
# egg fate
l$fate_e <- if("ht" %in% x$state) "success" else "failure"
if(!is.na(l$le_e)) {
l$fate_e <- if(l$le_e == last(survey)) "undetermined" else l$fate_e
}
# first hatchling encounter
l$fe_h <- if("ht" %in% x$state) first(x$date[x$state == "ht" & x$date > l$le_e]) else NA
# visit previous to first ht encounter
l$pv_h <- if(!is.na(l$fe_h)) survey[which(survey == l$fe_h) - 1] else NA
# last ht encounter
l$le_h <- if("ht" %in% x$state) last(x$date[x$state == "ht"]) else NA
# visit following to last ht encounter
l$fv_h <- if(!is.na(l$le_h)) survey[which(survey == l$le_h) + 1] else NA
# ht fate
l$fate_h <- if("c3" %in% x$nest_status) "success" else "failure"
if(!is.na(l$le_h)){
l$fate_h <- if(l$le_h == last(survey)) "undetermined" else l$fate_h
}
l <- lapply(l, function(x)	if(length(x) == 0) NA else x)
l <- data.frame(l$pv_e, l$fe_e, l$le_e, l$fv_e, l$pv_h, l$fe_h, l$le_h, l$fv_h, l$fate_e, l$fate_h)
# make nicer namaes
names(l) <- stringr::str_sub(names(l), 3)
l
}, .progress = "text")
nests %<>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day")),
brooding_time = as.numeric(difftime(le_h, fe_h, units = "day")))
nests %>%
fi(incubation_time > 45 |
brooding_time > 80) %>% View
nests <- tb %>%
fi(spp_name != "No data") %>%
plyr::ddply(c("islet", "nest", "spp_name"), function(x){
# get all the dates in which the islet was visited
survey <- effort %>%
fi(islet == x$islet[1],
spp_name == x$spp_nam[1]) %>%
ar(date) %$% date
# simplify if it was an egg or a hatcling
x %<>% ar(date) %>%
fi(!is.na(nest_status)) %>%
mu(state = plyr::mapvalues(nest_status,
c("e", "c1", "c2", "c3", "ep", "cd", "en", "not found"),
c("e", rep("ht", 3), rep(NA, 4)),
warn_missing = F)) %>%
fi(!is.na(state))
## find all nest attributes for both egg and hatchling times
l <- list()
# fist egg encounter
l$fe_e <- if ("e" %in% x$state) first(x$date[x$state == "e"]) else NA
# visit previous to first egg encounter
l$pv_e <- if(!is.na(l$fe_e)) survey[which(survey == l$fe_e) - 1] else NA
# last egg encounter
l$le_e <- if("e" %in% x$state) last(x$date[x$state == "e"]) else NA
# visit following to last egg encounter
l$fv_e <- if(!is.na(l$le_e)) survey[which(survey == l$le_e) + 1] else NA
# egg fate
l$fate_e <- if("ht" %in% x$state) "success" else "failure"
if(!is.na(l$le_e)) {
l$fate_e <- if(l$le_e == last(survey)) "undetermined" else l$fate_e
}
# first hatchling encounter
l$fe_h <- if("ht" %in% x$state) first(x$date[x$state == "ht"]) else NA
# visit previous to first ht encounter
l$pv_h <- if(!is.na(l$fe_h)) survey[which(survey == l$fe_h) - 1] else NA
# last ht encounter
l$le_h <- if("ht" %in% x$state) last(x$date[x$state == "ht"]) else NA
# visit following to last ht encounter
l$fv_h <- if(!is.na(l$le_h)) survey[which(survey == l$le_h) + 1] else NA
# ht fate
l$fate_h <- if("c3" %in% x$nest_status) "success" else "failure"
if(!is.na(l$le_h)){
l$fate_h <- if(l$le_h == last(survey)) "undetermined" else l$fate_h
}
l <- lapply(l, function(x)	if(length(x) == 0) NA else x)
l <- data.frame(l$pv_e, l$fe_e, l$le_e, l$fv_e, l$pv_h, l$fe_h, l$le_h, l$fv_h, l$fate_e, l$fate_h)
# make nicer namaes
names(l) <- stringr::str_sub(names(l), 3)
l
}, .progress = "text")
nests %<>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day")),
brooding_time = as.numeric(difftime(le_h, fe_h, units = "day")),
nest_time = incubation_time + brooding_time)
nests %>%
fi(incubation_time > 45 |
brooding_time > 80 |
nest_time > 125) %>% View
nests %>%
ggplot(aes(x = fe_e, y = incubation_time)) +
geom_point()
nests %>%
ggplot(aes(x = fe_e, y = incubation_time)) +
geom_smooth()
nests %>%
ggplot(aes(x = fe_e, y = incubation_time, colour = spp_name)) +
geom_smooth()
nests %>%
fi(fate_e == "success") %>%
ggplot(aes(x = fe_e, y = incubation_time, colour = spp_name)) +
geom_smooth()
nests %>%
fi(fate_e == "success") %>%
ggplot(aes(x = fe_e, y = incubation_time, colour = spp_name)) +
geom_smooth(method = "lm")
nests %>%
fi(fate_h == "success") %>%
ggplot(aes(x = fe_h, y = brooding_time, colour = spp_name)) +
geom_smooth(method = "lm")
nests %>%
fi(incubation_time < 45,
brooding_time < 80,
nest_time < 125) %>% View
nests %>%
fi(incubation_time < 45 | is.na(incubation_time),
brooding_time < 80 | is.na(brooding_time),
nest_time < 125 | is.na(nest_time)) %>% View
nests %<>%
fi(incubation_time < 50 | is.na(incubation_time),
brooding_time < 90 | is.na(brooding_time),
nest_time < 140 | is.na(nest_time))
nests %>%
fi(fate_e == "success") %>%
ggplot(aes(x = fe_e, y = incubation_time, colour = spp_name)) +
geom_smooth(method = "lm")
nests %>%
fi(fate_h == "success") %>%
ggplot(aes(x = fe_h, y = brooding_time, colour = spp_name)) +
geom_smooth(method = "lm")
nests %>%
fi(fate_h == "success") %>%
plyr::dlply("spp_name", function(x){
lm(brooding_time ~ fe_h)
})
nests %>%
fi(fate_h == "success") %>%
plyr::dlply("spp_name", function(x){
lm(brooding_time ~ fe_h, data = x)
})
nests %>%
fi(fate_h == "success") %>%
plyr::dlply("spp_name", function(x){
lm(brooding_time ~ fe_h, data = x)
}) %>%
lapply(summary)
nests %>%
fi(fate_h == "success") %>%
ggplot(aes(x = fe_h, y = brooding_time, colour = spp_name)) +
geom_point() +
geom_smooth(method = "lm")
x <- fi(tb, spp_name == "Red-tail tropicbird", islet == "LG00", nest == 408)
nests %>%
fi(fate_h == "success",
brooding_time != 0) %>%
plyr::dlply("spp_name", function(x){
lm(brooding_time ~ fe_h, data = x)
}) %>%
lapply(summary)
nests %>%
fi(fate_h == "success",
brooding_time != 0) %>%
ggplot(aes(x = fe_h, y = brooding_time, colour = spp_name)) +
geom_point() +
geom_smooth(method = "lm")
nests <- tb %>%
fi(spp_name != "No data") %>%
plyr::ddply(c("islet", "nest", "spp_name"), function(x){
# get all the dates in which the islet was visited
survey <- effort %>%
fi(islet == x$islet[1],
spp_name == x$spp_nam[1]) %>%
ar(date) %$% date
# simplify if it was an egg or a hatcling
x %<>% ar(date) %>%
fi(!is.na(nest_status)) %>%
mu(state = plyr::mapvalues(nest_status,
c("e", "c1", "c2", "c3", "ep", "cd", "en", "not found"),
c("e", rep("ht", 3), rep(NA, 4)),
warn_missing = F)) %>%
fi(!is.na(state))
## find all nest attributes for both egg and hatchling times
l <- list()
# fist egg encounter
l$fe_e <- if ("e" %in% x$state) first(x$date[x$state == "e"]) else NA
# visit previous to first egg encounter
l$pv_e <- if(!is.na(l$fe_e)) survey[which(survey == l$fe_e) - 1] else NA
# last egg encounter
l$le_e <- if("e" %in% x$state) last(x$date[x$state == "e"]) else NA
# visit following to last egg encounter
l$fv_e <- if(!is.na(l$le_e)) survey[which(survey == l$le_e) + 1] else NA
# egg fate
l$fate_e <- if("ht" %in% x$state) "success" else "failure"
if(!is.na(l$le_e)) {
l$fate_e <- if(l$le_e == last(survey)) "undetermined" else l$fate_e
}
# first hatchling encounter
l$fe_h <- if("ht" %in% x$state) first(x$date[x$state == "ht"]) else NA
# visit previous to first ht encounter
l$pv_h <- if(!is.na(l$fe_h)) survey[which(survey == l$fe_h) - 1] else NA
# last ht encounter
l$le_h <- if("ht" %in% x$state) last(x$date[x$state == "ht"]) else NA
# visit following to last ht encounter
l$fv_h <- if(!is.na(l$le_h)) survey[which(survey == l$le_h) + 1] else NA
# ht fate
l$fate_h <- if("c3" %in% x$nest_status) "success" else "failure"
if(!is.na(l$le_h)){
l$fate_h <- if(l$le_h == last(survey)) "undetermined" else l$fate_h
}
# last stage
l$stage <- last(x$nest_status)
l <- lapply(l, function(x)	if(length(x) == 0) NA else x)
l <- data.frame(l$pv_e, l$fe_e, l$le_e, l$fv_e, l$pv_h, l$fe_h, l$le_h, l$fv_h, l$fate_e, l$fate_h, l$stage)
# make nicer namaes
names(l) <- stringr::str_sub(names(l), 3)
l
}, .progress = "text")
nests %<>%
mu(incubation_time = as.numeric(difftime(le_e, fe_e, units = "day")),
brooding_time = as.numeric(difftime(le_h, fe_h, units = "day")),
nest_time = incubation_time + brooding_time)
nest_success <- readRDS("./data/processed/nest_success.rds")
?BEANSP
library(BEANSP)
?nestr
?nestsr
?BEANSP
install.packages("unmarked")
install.packages("unmarked")
install.packages("RcppArmadillo")
library(unmarked)
